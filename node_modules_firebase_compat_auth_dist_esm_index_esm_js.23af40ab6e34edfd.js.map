{"version":3,"file":"node_modules_firebase_compat_auth_dist_esm_index_esm_js.23af40ab6e34edfd.js","mappings":"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","names":["_cordovaWindow","window","_generateHandlerUrl2","_asyncToGenerator","auth","event","provider","_a","BuildInfo","debugAssert","sessionId","sessionDigest","computeSha256","_x8","_computeSha","apply","this","arguments","additionalParams","_isIOS","ibi","packageName","_isAndroid","apn","_fail","displayName","appDisplayName","_getRedirectUrl","type","undefined","eventId","_validateOrigin2","request","iosBundleId","androidPackageName","_getProjectConfig","_waitForAppResume2","eventListener","iabRef","cordova","cleanup","Promise","resolve","reject","onCloseTimer","authEventSeen","closeBrowserTab","plugins","browsertab","close","resumed","setTimeout","_createError","visibilityChanged","document","visibilityState","addPassiveListener","addEventListener","removePassiveListener","removeEventListener","clearTimeout","bytes","stringToArrayBuffer","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","Uint8Array","i","charCodeAt","buf","crypto","subtle","digest","Array","from","map","num","toString","padStart","join","CordovaAuthEventManager","AuthEventManager","constructor","super","passiveListeners","Set","initPromise","resolveInialized","cb","add","delete","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","initialized","_this","_getAndRemoveEvent","_x9","_getAndRemoveEvent2","storage","_get","persistenceKey","_remove","generateSessionId","chars","idx","Math","floor","allowedChars","random","push","charAt","_getInstance","browserLocalPersistence","_persistenceKeyName","config","apiKey","name","searchParamsOrEmpty","url","includes","_","rest","split","querystringDecode","cordovaPopupRedirectResolver","CordovaPopupRedirectResolver","_redirectPersistence","browserSessionPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_getRedirectResult","_overrideRedirectResult","_initialize","_this2","key","_key","manager","get","set","attachCallbackListeners","_openPopup","_openRedirect","authType","_this3","_checkCordovaConfiguration","_b","_c","_d","_e","_f","_g","_h","_j","_k","win","_assert","universalLinks","subscribe","missingPlugin","openUrl","isAvailable","InAppBrowser","open","_clearRedirectOutcomes","_originValidation","_generateNewEvent","urlResponse","postBody","tenantId","error","_savePartialEvent","_set","_generateHandlerUrl","_x","_x2","_x3","_performRedirect","handlerUrl","browserTabIsAvailable","_isIOS7Or8","_waitForAppResume","_x5","_x6","_x7","_isIframeWebStorageSupported","_auth","_cb","Error","_validateOrigin","_x4","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","_ref2","eventData","partialEvent","finalEvent","_eventFromPartialAndUrl","callbackUrl","_getDeepLinkFromCallback","params","link","decodeURIComponent","doubleDeepLink","iOSDeepLink","deep_link_id","errorObject","firebaseError","parseJsonOrNull","json","JSON","parse","code","_x10","existingHandleOpenURL","packagePrefix","toLowerCase","_ref3","startsWith","e","console","_x11","_getCurrentScheme","self","location","protocol","_isAndroidOrIosCordovaScheme","ua","getUA","match","_isWebStorageSupported","localStorage","exp","setItem","removeItem","_isLocalStorageNotSynchronized","_isIe11","isIE","documentMode","_isEdge","isIndexedDBAvailable","_isWorker","global","_isPopupRedirectSupported","_isHttpOrHttps","isBrowserExtension","_isNativeEnvironment","isReactNative","isNode","_isLikelyCordova","_isCordova2","timeoutId","Persistence","LOCAL","NONE","SESSION","_assert$3","PERSISTENCE_KEY","_savePersistenceForRedirect","_savePersistenceForRedirect2","_initializationPromise","session","getSessionStorageIfAvailable","_getPersistence","_getSelfWindow","sessionStorage","_assert$2","CompatPopupRedirectResolver","browserResolver","cordovaResolver","underlyingResolver","selectUnderlyingResolver","assertedUnderlyingResolver","_this4","isCordova","_isCordova","unwrap","object","credentialFromResponse","userCredential","credentialFromObject","_tokenResponse","FirebaseError","customData","providerId","oauthIdToken","oauthAccessToken","oauthTokenSecret","pendingToken","nonce","signInMethod","idToken","accessToken","credential","rawNonce","credentialFromError","credentialFromResult","convertCredential","credentialPromise","catch","attachExtraErrorFields","response","resolver","MultiFactorResolver","credErr","email","phoneNumber","then","user","operationType","additionalUserInfo","User","getOrCreate","convertConfirmationResult","_convertConfirmationResult","confirmationResultPromise","confirmationResultExp","verificationId","confirm","verificationCode","wrapped","hints","resolveSignIn","assertion","_delegate","multiFactor","static","USER_MAP","has","reload","toJSON","getIdTokenResult","forceRefresh","getIdToken","linkAndRetrieveDataWithCredential","linkWithCredential","_this5","linkWithPhoneNumber","applicationVerifier","_this6","linkWithPopup","_this7","linkWithRedirect","_this8","reauthenticateAndRetrieveDataWithCredential","reauthenticateWithCredential","_this9","reauthenticateWithPhoneNumber","reauthenticateWithPopup","reauthenticateWithRedirect","_this10","sendEmailVerification","actionCodeSettings","unlink","_this11","updateEmail","newEmail","updatePassword","newPassword","updatePhoneNumber","phoneCredential","updateProfile","profile","verifyBeforeUpdateEmail","emailVerified","isAnonymous","metadata","providerData","refreshToken","photoURL","uid","WeakMap","_assert$1","Auth","app","isInitialized","getImmediate","linkUnderlyingAuth","options","appName","initialize","persistence","buildPersistenceHierarchy","popupRedirectResolver","_updateErrorMap","emulatorConfig","currentUser","languageCode","settings","tid","useDeviceLanguage","signOut","useEmulator","applyActionCode","checkActionCode","confirmPasswordReset","createUserWithEmailAndPassword","password","_this12","fetchProvidersForEmail","fetchSignInMethodsForEmail","isSignInWithEmailLink","emailLink","getRedirectResult","_this13","addFrameworkForLogging","framework","_castAuth","_logFramework","onAuthStateChanged","nextOrObserver","errorFn","completed","next","complete","wrapObservers","onIdTokenChanged","sendSignInLinkToEmail","sendPasswordResetEmail","setPersistence","_this14","converted","_validatePersistenceArgument","Object","values","_isAvailable","signInAndRetrieveDataWithCredential","signInWithCredential","signInAnonymously","signInWithCustomToken","token","signInWithEmailAndPassword","signInWithEmailLink","signInWithPhoneNumber","signInWithPopup","_this15","signInWithRedirect","_this16","updateCurrentUser","verifyPasswordResetCode","_delete","oldNext","persistences","_getPersistencesFromRedirect","getItem","PhoneAuthProvider","firebase","verifyPhoneNumber","phoneInfoOptions","PHONE_SIGN_IN_METHOD","PROVIDER_ID","RecaptchaVerifier","container","parameters","clear","render","verify","registerAuthCompat","instance","INTERNAL","registerComponent","Component","getProvider","authProvider","setServiceProps","ActionCodeInfo","Operation","EMAIL_SIGNIN","PASSWORD_RESET","RECOVER_EMAIL","REVERT_SECOND_FACTOR_ADDITION","VERIFY_AND_CHANGE_EMAIL","VERIFY_EMAIL","EmailAuthProvider","FacebookAuthProvider","GithubAuthProvider","GoogleAuthProvider","OAuthProvider","SAMLAuthProvider","PhoneMultiFactorGenerator","TwitterAuthProvider","AuthCredential","setInstantiationMode","setMultipleInstances","registerVersion"],"sourceRoot":"webpack:///","sources":["./node_modules/@firebase/auth/dist/esm2017/internal.js","./node_modules/@firebase/auth-compat/dist/index.esm2017.js"],"sourcesContent":["import { as as debugAssert, at as _isIOS, au as _isAndroid, av as _fail, aw as _getRedirectUrl, ax as _getProjectConfig, ay as _isIOS7Or8, az as _createError, aA as _assert, aB as AuthEventManager, aC as _getInstance, b as browserLocalPersistence, aD as _persistenceKeyName, a as browserSessionPersistence, aE as _getRedirectResult, aF as _overrideRedirectResult, aG as _clearRedirectOutcomes, aH as _castAuth } from './index-e3d5d3f4.js';\nexport { A as ActionCodeOperation, ag as ActionCodeURL, J as AuthCredential, G as AuthErrorCodes, aJ as AuthImpl, aM as AuthPopup, K as EmailAuthCredential, Q as EmailAuthProvider, U as FacebookAuthProvider, F as FactorId, aN as FetchProvider, W as GithubAuthProvider, V as GoogleAuthProvider, L as OAuthCredential, X as OAuthProvider, O as OperationType, M as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, p as ProviderId, R as RecaptchaVerifier, aO as SAMLAuthCredential, Y as SAMLAuthProvider, S as SignInMethod, T as TotpMultiFactorGenerator, n as TotpSecret, Z as TwitterAuthProvider, aI as UserImpl, aA as _assert, aH as _castAuth, av as _fail, aL as _generateEventId, aK as _getClientVersion, aC as _getInstance, aE as _getRedirectResult, aF as _overrideRedirectResult, aD as _persistenceKeyName, a5 as applyActionCode, w as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a6 as checkActionCode, a4 as confirmPasswordReset, I as connectAuthEmulator, a8 as createUserWithEmailAndPassword, D as debugErrorMap, C as deleteUser, ad as fetchSignInMethodsForEmail, ao as getAdditionalUserInfo, o as getAuth, al as getIdToken, am as getIdTokenResult, aq as getMultiFactorResolver, j as getRedirectResult, N as inMemoryPersistence, i as indexedDBLocalPersistence, H as initializeAuth, t as initializeRecaptchaConfig, ab as isSignInWithEmailLink, a0 as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ar as multiFactor, x as onAuthStateChanged, v as onIdTokenChanged, ah as parseActionCodeURL, E as prodErrorMap, a1 as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, ap as reload, ae as sendEmailVerification, a3 as sendPasswordResetEmail, aa as sendSignInLinkToEmail, q as setPersistence, _ as signInAnonymously, $ as signInWithCredential, a2 as signInWithCustomToken, a9 as signInWithEmailAndPassword, ac as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, B as signOut, an as unlink, z as updateCurrentUser, aj as updateEmail, ak as updatePassword, u as updatePhoneNumber, ai as updateProfile, y as useDeviceLanguage, af as verifyBeforeUpdateEmail, a7 as verifyPasswordResetCode } from './index-e3d5d3f4.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport 'tslib';\nimport '@firebase/logger';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* AuthEventType.UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n","import firebase from '@firebase/app-compat';\nimport * as exp from '@firebase/auth/internal';\nimport { Component } from '@firebase/component';\nimport { isBrowserExtension, getUA, isReactNative, isNode, isIndexedDBAvailable, isIE, FirebaseError } from '@firebase/util';\n\nvar name = \"@firebase/auth-compat\";\nvar version = \"0.4.2\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst CORDOVA_ONDEVICEREADY_TIMEOUT_MS = 1000;\r\nfunction _getCurrentScheme() {\r\n    var _a;\r\n    return ((_a = self === null || self === void 0 ? void 0 : self.location) === null || _a === void 0 ? void 0 : _a.protocol) || null;\r\n}\r\n/**\r\n * @return {boolean} Whether the current environment is http or https.\r\n */\r\nfunction _isHttpOrHttps() {\r\n    return _getCurrentScheme() === 'http:' || _getCurrentScheme() === 'https:';\r\n}\r\n/**\r\n * @param {?string=} ua The user agent.\r\n * @return {boolean} Whether the app is rendered in a mobile iOS or Android\r\n *     Cordova environment.\r\n */\r\nfunction _isAndroidOrIosCordovaScheme(ua = getUA()) {\r\n    return !!((_getCurrentScheme() === 'file:' ||\r\n        _getCurrentScheme() === 'ionic:' ||\r\n        _getCurrentScheme() === 'capacitor:') &&\r\n        ua.toLowerCase().match(/iphone|ipad|ipod|android/));\r\n}\r\n/**\r\n * @return {boolean} Whether the environment is a native environment, where\r\n *     CORS checks do not apply.\r\n */\r\nfunction _isNativeEnvironment() {\r\n    return isReactNative() || isNode();\r\n}\r\n/**\r\n * Checks whether the user agent is IE11.\r\n * @return {boolean} True if it is IE11.\r\n */\r\nfunction _isIe11() {\r\n    return isIE() && (document === null || document === void 0 ? void 0 : document.documentMode) === 11;\r\n}\r\n/**\r\n * Checks whether the user agent is Edge.\r\n * @param {string} userAgent The browser user agent string.\r\n * @return {boolean} True if it is Edge.\r\n */\r\nfunction _isEdge(ua = getUA()) {\r\n    return /Edge\\/\\d+/.test(ua);\r\n}\r\n/**\r\n * @param {?string=} opt_userAgent The navigator user agent.\r\n * @return {boolean} Whether local storage is not synchronized between an iframe\r\n *     and a popup of the same domain.\r\n */\r\nfunction _isLocalStorageNotSynchronized(ua = getUA()) {\r\n    return _isIe11() || _isEdge(ua);\r\n}\r\n/** @return {boolean} Whether web storage is supported. */\r\nfunction _isWebStorageSupported() {\r\n    try {\r\n        const storage = self.localStorage;\r\n        const key = exp._generateEventId();\r\n        if (storage) {\r\n            // setItem will throw an exception if we cannot access WebStorage (e.g.,\r\n            // Safari in private mode).\r\n            storage['setItem'](key, '1');\r\n            storage['removeItem'](key);\r\n            // For browsers where iframe web storage does not synchronize with a popup\r\n            // of the same domain, indexedDB is used for persistent storage. These\r\n            // browsers include IE11 and Edge.\r\n            // Make sure it is supported (IE11 and Edge private mode does not support\r\n            // that).\r\n            if (_isLocalStorageNotSynchronized()) {\r\n                // In such browsers, if indexedDB is not supported, an iframe cannot be\r\n                // notified of the popup sign in result.\r\n                return isIndexedDBAvailable();\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n    catch (e) {\r\n        // localStorage is not available from a worker. Test availability of\r\n        // indexedDB.\r\n        return _isWorker() && isIndexedDBAvailable();\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @param {?Object=} global The optional global scope.\r\n * @return {boolean} Whether current environment is a worker.\r\n */\r\nfunction _isWorker() {\r\n    // WorkerGlobalScope only defined in worker environment.\r\n    return (typeof global !== 'undefined' &&\r\n        'WorkerGlobalScope' in global &&\r\n        'importScripts' in global);\r\n}\r\nfunction _isPopupRedirectSupported() {\r\n    return ((_isHttpOrHttps() ||\r\n        isBrowserExtension() ||\r\n        _isAndroidOrIosCordovaScheme()) &&\r\n        // React Native with remote debugging reports its location.protocol as\r\n        // http.\r\n        !_isNativeEnvironment() &&\r\n        // Local storage has to be supported for browser popup and redirect\r\n        // operations to work.\r\n        _isWebStorageSupported() &&\r\n        // DOM, popups and redirects are not supported within a worker.\r\n        !_isWorker());\r\n}\r\n/** Quick check that indicates the platform *may* be Cordova */\r\nfunction _isLikelyCordova() {\r\n    return _isAndroidOrIosCordovaScheme() && typeof document !== 'undefined';\r\n}\r\nasync function _isCordova() {\r\n    if (!_isLikelyCordova()) {\r\n        return false;\r\n    }\r\n    return new Promise(resolve => {\r\n        const timeoutId = setTimeout(() => {\r\n            // We've waited long enough; the telltale Cordova event didn't happen\r\n            resolve(false);\r\n        }, CORDOVA_ONDEVICEREADY_TIMEOUT_MS);\r\n        document.addEventListener('deviceready', () => {\r\n            clearTimeout(timeoutId);\r\n            resolve(true);\r\n        });\r\n    });\r\n}\r\nfunction _getSelfWindow() {\r\n    return typeof window !== 'undefined' ? window : null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst Persistence = {\r\n    LOCAL: 'local',\r\n    NONE: 'none',\r\n    SESSION: 'session'\r\n};\r\nconst _assert$3 = exp._assert;\r\nconst PERSISTENCE_KEY = 'persistence';\r\n/**\r\n * Validates that an argument is a valid persistence value. If an invalid type\r\n * is specified, an error is thrown synchronously.\r\n */\r\nfunction _validatePersistenceArgument(auth, persistence) {\r\n    _assert$3(Object.values(Persistence).includes(persistence), auth, \"invalid-persistence-type\" /* exp.AuthErrorCode.INVALID_PERSISTENCE */);\r\n    // Validate if the specified type is supported in the current environment.\r\n    if (isReactNative()) {\r\n        // This is only supported in a browser.\r\n        _assert$3(persistence !== Persistence.SESSION, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (isNode()) {\r\n        // Only none is supported in Node.js.\r\n        _assert$3(persistence === Persistence.NONE, auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    if (_isWorker()) {\r\n        // In a worker environment, either LOCAL or NONE are supported.\r\n        // If indexedDB not supported and LOCAL provided, throw an error\r\n        _assert$3(persistence === Persistence.NONE ||\r\n            (persistence === Persistence.LOCAL && isIndexedDBAvailable()), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n        return;\r\n    }\r\n    // This is restricted by what the browser supports.\r\n    _assert$3(persistence === Persistence.NONE || _isWebStorageSupported(), auth, \"unsupported-persistence-type\" /* exp.AuthErrorCode.UNSUPPORTED_PERSISTENCE */);\r\n}\r\nasync function _savePersistenceForRedirect(auth) {\r\n    await auth._initializationPromise;\r\n    const session = getSessionStorageIfAvailable();\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, auth.config.apiKey, auth.name);\r\n    if (session) {\r\n        session.setItem(key, auth._getPersistence());\r\n    }\r\n}\r\nfunction _getPersistencesFromRedirect(apiKey, appName) {\r\n    const session = getSessionStorageIfAvailable();\r\n    if (!session) {\r\n        return [];\r\n    }\r\n    const key = exp._persistenceKeyName(PERSISTENCE_KEY, apiKey, appName);\r\n    const persistence = session.getItem(key);\r\n    switch (persistence) {\r\n        case Persistence.NONE:\r\n            return [exp.inMemoryPersistence];\r\n        case Persistence.LOCAL:\r\n            return [exp.indexedDBLocalPersistence, exp.browserSessionPersistence];\r\n        case Persistence.SESSION:\r\n            return [exp.browserSessionPersistence];\r\n        default:\r\n            return [];\r\n    }\r\n}\r\n/** Returns session storage, or null if the property access errors */\r\nfunction getSessionStorageIfAvailable() {\r\n    var _a;\r\n    try {\r\n        return ((_a = _getSelfWindow()) === null || _a === void 0 ? void 0 : _a.sessionStorage) || null;\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$2 = exp._assert;\r\n/** Platform-agnostic popup-redirect resolver */\r\nclass CompatPopupRedirectResolver {\r\n    constructor() {\r\n        // Create both resolvers for dynamic resolution later\r\n        this.browserResolver = exp._getInstance(exp.browserPopupRedirectResolver);\r\n        this.cordovaResolver = exp._getInstance(exp.cordovaPopupRedirectResolver);\r\n        // The actual resolver in use: either browserResolver or cordovaResolver.\r\n        this.underlyingResolver = null;\r\n        this._redirectPersistence = exp.browserSessionPersistence;\r\n        this._completeRedirectFn = exp._getRedirectResult;\r\n        this._overrideRedirectResult = exp._overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._initialize(auth);\r\n    }\r\n    async _openPopup(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openPopup(auth, provider, authType, eventId);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        await this.selectUnderlyingResolver();\r\n        return this.assertedUnderlyingResolver._openRedirect(auth, provider, authType, eventId);\r\n    }\r\n    _isIframeWebStorageSupported(auth, cb) {\r\n        this.assertedUnderlyingResolver._isIframeWebStorageSupported(auth, cb);\r\n    }\r\n    _originValidation(auth) {\r\n        return this.assertedUnderlyingResolver._originValidation(auth);\r\n    }\r\n    get _shouldInitProactively() {\r\n        return _isLikelyCordova() || this.browserResolver._shouldInitProactively;\r\n    }\r\n    get assertedUnderlyingResolver() {\r\n        _assert$2(this.underlyingResolver, \"internal-error\" /* exp.AuthErrorCode.INTERNAL_ERROR */);\r\n        return this.underlyingResolver;\r\n    }\r\n    async selectUnderlyingResolver() {\r\n        if (this.underlyingResolver) {\r\n            return;\r\n        }\r\n        // We haven't yet determined whether or not we're in Cordova; go ahead\r\n        // and determine that state now.\r\n        const isCordova = await _isCordova();\r\n        this.underlyingResolver = isCordova\r\n            ? this.cordovaResolver\r\n            : this.browserResolver;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction unwrap(object) {\r\n    return object.unwrap();\r\n}\r\nfunction wrapped(object) {\r\n    return object.wrapped();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction credentialFromResponse(userCredential) {\r\n    return credentialFromObject(userCredential);\r\n}\r\nfunction attachExtraErrorFields(auth, e) {\r\n    var _a;\r\n    // The response contains all fields from the server which may or may not\r\n    // actually match the underlying type\r\n    const response = (_a = e.customData) === null || _a === void 0 ? void 0 : _a._tokenResponse;\r\n    if ((e === null || e === void 0 ? void 0 : e.code) === 'auth/multi-factor-auth-required') {\r\n        const mfaErr = e;\r\n        mfaErr.resolver = new MultiFactorResolver(auth, exp.getMultiFactorResolver(auth, e));\r\n    }\r\n    else if (response) {\r\n        const credential = credentialFromObject(e);\r\n        const credErr = e;\r\n        if (credential) {\r\n            credErr.credential = credential;\r\n            credErr.tenantId = response.tenantId || undefined;\r\n            credErr.email = response.email || undefined;\r\n            credErr.phoneNumber = response.phoneNumber || undefined;\r\n        }\r\n    }\r\n}\r\nfunction credentialFromObject(object) {\r\n    const { _tokenResponse } = (object instanceof FirebaseError ? object.customData : object);\r\n    if (!_tokenResponse) {\r\n        return null;\r\n    }\r\n    // Handle phone Auth credential responses, as they have a different format\r\n    // from other backend responses (i.e. no providerId). This is also only the\r\n    // case for user credentials (does not work for errors).\r\n    if (!(object instanceof FirebaseError)) {\r\n        if ('temporaryProof' in _tokenResponse && 'phoneNumber' in _tokenResponse) {\r\n            return exp.PhoneAuthProvider.credentialFromResult(object);\r\n        }\r\n    }\r\n    const providerId = _tokenResponse.providerId;\r\n    // Email and password is not supported as there is no situation where the\r\n    // server would return the password to the client.\r\n    if (!providerId || providerId === exp.ProviderId.PASSWORD) {\r\n        return null;\r\n    }\r\n    let provider;\r\n    switch (providerId) {\r\n        case exp.ProviderId.GOOGLE:\r\n            provider = exp.GoogleAuthProvider;\r\n            break;\r\n        case exp.ProviderId.FACEBOOK:\r\n            provider = exp.FacebookAuthProvider;\r\n            break;\r\n        case exp.ProviderId.GITHUB:\r\n            provider = exp.GithubAuthProvider;\r\n            break;\r\n        case exp.ProviderId.TWITTER:\r\n            provider = exp.TwitterAuthProvider;\r\n            break;\r\n        default:\r\n            const { oauthIdToken, oauthAccessToken, oauthTokenSecret, pendingToken, nonce } = _tokenResponse;\r\n            if (!oauthAccessToken &&\r\n                !oauthTokenSecret &&\r\n                !oauthIdToken &&\r\n                !pendingToken) {\r\n                return null;\r\n            }\r\n            // TODO(avolkovi): uncomment this and get it working with SAML & OIDC\r\n            if (pendingToken) {\r\n                if (providerId.startsWith('saml.')) {\r\n                    return exp.SAMLAuthCredential._create(providerId, pendingToken);\r\n                }\r\n                else {\r\n                    // OIDC and non-default providers excluding Twitter.\r\n                    return exp.OAuthCredential._fromParams({\r\n                        providerId,\r\n                        signInMethod: providerId,\r\n                        pendingToken,\r\n                        idToken: oauthIdToken,\r\n                        accessToken: oauthAccessToken\r\n                    });\r\n                }\r\n            }\r\n            return new exp.OAuthProvider(providerId).credential({\r\n                idToken: oauthIdToken,\r\n                accessToken: oauthAccessToken,\r\n                rawNonce: nonce\r\n            });\r\n    }\r\n    return object instanceof FirebaseError\r\n        ? provider.credentialFromError(object)\r\n        : provider.credentialFromResult(object);\r\n}\r\nfunction convertCredential(auth, credentialPromise) {\r\n    return credentialPromise\r\n        .catch(e => {\r\n        if (e instanceof FirebaseError) {\r\n            attachExtraErrorFields(auth, e);\r\n        }\r\n        throw e;\r\n    })\r\n        .then(credential => {\r\n        const operationType = credential.operationType;\r\n        const user = credential.user;\r\n        return {\r\n            operationType,\r\n            credential: credentialFromResponse(credential),\r\n            additionalUserInfo: exp.getAdditionalUserInfo(credential),\r\n            user: User.getOrCreate(user)\r\n        };\r\n    });\r\n}\r\nasync function convertConfirmationResult(auth, confirmationResultPromise) {\r\n    const confirmationResultExp = await confirmationResultPromise;\r\n    return {\r\n        verificationId: confirmationResultExp.verificationId,\r\n        confirm: (verificationCode) => convertCredential(auth, confirmationResultExp.confirm(verificationCode))\r\n    };\r\n}\r\nclass MultiFactorResolver {\r\n    constructor(auth, resolver) {\r\n        this.resolver = resolver;\r\n        this.auth = wrapped(auth);\r\n    }\r\n    get session() {\r\n        return this.resolver.session;\r\n    }\r\n    get hints() {\r\n        return this.resolver.hints;\r\n    }\r\n    resolveSignIn(assertion) {\r\n        return convertCredential(unwrap(this.auth), this.resolver.resolveSignIn(assertion));\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass User {\r\n    constructor(_delegate) {\r\n        this._delegate = _delegate;\r\n        this.multiFactor = exp.multiFactor(_delegate);\r\n    }\r\n    static getOrCreate(user) {\r\n        if (!User.USER_MAP.has(user)) {\r\n            User.USER_MAP.set(user, new User(user));\r\n        }\r\n        return User.USER_MAP.get(user);\r\n    }\r\n    delete() {\r\n        return this._delegate.delete();\r\n    }\r\n    reload() {\r\n        return this._delegate.reload();\r\n    }\r\n    toJSON() {\r\n        return this._delegate.toJSON();\r\n    }\r\n    getIdTokenResult(forceRefresh) {\r\n        return this._delegate.getIdTokenResult(forceRefresh);\r\n    }\r\n    getIdToken(forceRefresh) {\r\n        return this._delegate.getIdToken(forceRefresh);\r\n    }\r\n    linkAndRetrieveDataWithCredential(credential) {\r\n        return this.linkWithCredential(credential);\r\n    }\r\n    async linkWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.linkWithCredential(this._delegate, credential));\r\n    }\r\n    async linkWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.linkWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async linkWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.linkWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async linkWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.linkWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    reauthenticateAndRetrieveDataWithCredential(credential) {\r\n        return this.reauthenticateWithCredential(credential);\r\n    }\r\n    async reauthenticateWithCredential(credential) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithCredential(this._delegate, credential));\r\n    }\r\n    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this.auth, exp.reauthenticateWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    reauthenticateWithPopup(provider) {\r\n        return convertCredential(this.auth, exp.reauthenticateWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async reauthenticateWithRedirect(provider) {\r\n        await _savePersistenceForRedirect(exp._castAuth(this.auth));\r\n        return exp.reauthenticateWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    sendEmailVerification(actionCodeSettings) {\r\n        return exp.sendEmailVerification(this._delegate, actionCodeSettings);\r\n    }\r\n    async unlink(providerId) {\r\n        await exp.unlink(this._delegate, providerId);\r\n        return this;\r\n    }\r\n    updateEmail(newEmail) {\r\n        return exp.updateEmail(this._delegate, newEmail);\r\n    }\r\n    updatePassword(newPassword) {\r\n        return exp.updatePassword(this._delegate, newPassword);\r\n    }\r\n    updatePhoneNumber(phoneCredential) {\r\n        return exp.updatePhoneNumber(this._delegate, phoneCredential);\r\n    }\r\n    updateProfile(profile) {\r\n        return exp.updateProfile(this._delegate, profile);\r\n    }\r\n    verifyBeforeUpdateEmail(newEmail, actionCodeSettings) {\r\n        return exp.verifyBeforeUpdateEmail(this._delegate, newEmail, actionCodeSettings);\r\n    }\r\n    get emailVerified() {\r\n        return this._delegate.emailVerified;\r\n    }\r\n    get isAnonymous() {\r\n        return this._delegate.isAnonymous;\r\n    }\r\n    get metadata() {\r\n        return this._delegate.metadata;\r\n    }\r\n    get phoneNumber() {\r\n        return this._delegate.phoneNumber;\r\n    }\r\n    get providerData() {\r\n        return this._delegate.providerData;\r\n    }\r\n    get refreshToken() {\r\n        return this._delegate.refreshToken;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    get displayName() {\r\n        return this._delegate.displayName;\r\n    }\r\n    get email() {\r\n        return this._delegate.email;\r\n    }\r\n    get photoURL() {\r\n        return this._delegate.photoURL;\r\n    }\r\n    get providerId() {\r\n        return this._delegate.providerId;\r\n    }\r\n    get uid() {\r\n        return this._delegate.uid;\r\n    }\r\n    get auth() {\r\n        return this._delegate.auth;\r\n    }\r\n}\r\n// Maintain a map so that there's always a 1:1 mapping between new User and\r\n// legacy compat users\r\nUser.USER_MAP = new WeakMap();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert$1 = exp._assert;\r\nclass Auth {\r\n    constructor(app, provider) {\r\n        this.app = app;\r\n        if (provider.isInitialized()) {\r\n            this._delegate = provider.getImmediate();\r\n            this.linkUnderlyingAuth();\r\n            return;\r\n        }\r\n        const { apiKey } = app.options;\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // TODO: platform needs to be determined using heuristics\r\n        _assert$1(apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        // Only use a popup/redirect resolver in browser environments\r\n        const resolver = typeof window !== 'undefined' ? CompatPopupRedirectResolver : undefined;\r\n        this._delegate = provider.initialize({\r\n            options: {\r\n                persistence: buildPersistenceHierarchy(apiKey, app.name),\r\n                popupRedirectResolver: resolver\r\n            }\r\n        });\r\n        this._delegate._updateErrorMap(exp.debugErrorMap);\r\n        this.linkUnderlyingAuth();\r\n    }\r\n    get emulatorConfig() {\r\n        return this._delegate.emulatorConfig;\r\n    }\r\n    get currentUser() {\r\n        if (!this._delegate.currentUser) {\r\n            return null;\r\n        }\r\n        return User.getOrCreate(this._delegate.currentUser);\r\n    }\r\n    get languageCode() {\r\n        return this._delegate.languageCode;\r\n    }\r\n    set languageCode(languageCode) {\r\n        this._delegate.languageCode = languageCode;\r\n    }\r\n    get settings() {\r\n        return this._delegate.settings;\r\n    }\r\n    get tenantId() {\r\n        return this._delegate.tenantId;\r\n    }\r\n    set tenantId(tid) {\r\n        this._delegate.tenantId = tid;\r\n    }\r\n    useDeviceLanguage() {\r\n        this._delegate.useDeviceLanguage();\r\n    }\r\n    signOut() {\r\n        return this._delegate.signOut();\r\n    }\r\n    useEmulator(url, options) {\r\n        exp.connectAuthEmulator(this._delegate, url, options);\r\n    }\r\n    applyActionCode(code) {\r\n        return exp.applyActionCode(this._delegate, code);\r\n    }\r\n    checkActionCode(code) {\r\n        return exp.checkActionCode(this._delegate, code);\r\n    }\r\n    confirmPasswordReset(code, newPassword) {\r\n        return exp.confirmPasswordReset(this._delegate, code, newPassword);\r\n    }\r\n    async createUserWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.createUserWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    fetchProvidersForEmail(email) {\r\n        return this.fetchSignInMethodsForEmail(email);\r\n    }\r\n    fetchSignInMethodsForEmail(email) {\r\n        return exp.fetchSignInMethodsForEmail(this._delegate, email);\r\n    }\r\n    isSignInWithEmailLink(emailLink) {\r\n        return exp.isSignInWithEmailLink(this._delegate, emailLink);\r\n    }\r\n    async getRedirectResult() {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        const credential = await exp.getRedirectResult(this._delegate, CompatPopupRedirectResolver);\r\n        if (!credential) {\r\n            return {\r\n                credential: null,\r\n                user: null\r\n            };\r\n        }\r\n        return convertCredential(this._delegate, Promise.resolve(credential));\r\n    }\r\n    // This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n    // It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it\r\n    // out of autogenerated documentation pages to reduce accidental misuse.\r\n    addFrameworkForLogging(framework) {\r\n        exp.addFrameworkForLogging(this._delegate, framework);\r\n    }\r\n    onAuthStateChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onAuthStateChanged(next, error, complete);\r\n    }\r\n    onIdTokenChanged(nextOrObserver, errorFn, completed) {\r\n        const { next, error, complete } = wrapObservers(nextOrObserver, errorFn, completed);\r\n        return this._delegate.onIdTokenChanged(next, error, complete);\r\n    }\r\n    sendSignInLinkToEmail(email, actionCodeSettings) {\r\n        return exp.sendSignInLinkToEmail(this._delegate, email, actionCodeSettings);\r\n    }\r\n    sendPasswordResetEmail(email, actionCodeSettings) {\r\n        return exp.sendPasswordResetEmail(this._delegate, email, actionCodeSettings || undefined);\r\n    }\r\n    async setPersistence(persistence) {\r\n        _validatePersistenceArgument(this._delegate, persistence);\r\n        let converted;\r\n        switch (persistence) {\r\n            case Persistence.SESSION:\r\n                converted = exp.browserSessionPersistence;\r\n                break;\r\n            case Persistence.LOCAL:\r\n                // Not using isIndexedDBAvailable() since it only checks if indexedDB is defined.\r\n                const isIndexedDBFullySupported = await exp\r\n                    ._getInstance(exp.indexedDBLocalPersistence)\r\n                    ._isAvailable();\r\n                converted = isIndexedDBFullySupported\r\n                    ? exp.indexedDBLocalPersistence\r\n                    : exp.browserLocalPersistence;\r\n                break;\r\n            case Persistence.NONE:\r\n                converted = exp.inMemoryPersistence;\r\n                break;\r\n            default:\r\n                return exp._fail(\"argument-error\" /* exp.AuthErrorCode.ARGUMENT_ERROR */, {\r\n                    appName: this._delegate.name\r\n                });\r\n        }\r\n        return this._delegate.setPersistence(converted);\r\n    }\r\n    signInAndRetrieveDataWithCredential(credential) {\r\n        return this.signInWithCredential(credential);\r\n    }\r\n    signInAnonymously() {\r\n        return convertCredential(this._delegate, exp.signInAnonymously(this._delegate));\r\n    }\r\n    signInWithCredential(credential) {\r\n        return convertCredential(this._delegate, exp.signInWithCredential(this._delegate, credential));\r\n    }\r\n    signInWithCustomToken(token) {\r\n        return convertCredential(this._delegate, exp.signInWithCustomToken(this._delegate, token));\r\n    }\r\n    signInWithEmailAndPassword(email, password) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailAndPassword(this._delegate, email, password));\r\n    }\r\n    signInWithEmailLink(email, emailLink) {\r\n        return convertCredential(this._delegate, exp.signInWithEmailLink(this._delegate, email, emailLink));\r\n    }\r\n    signInWithPhoneNumber(phoneNumber, applicationVerifier) {\r\n        return convertConfirmationResult(this._delegate, exp.signInWithPhoneNumber(this._delegate, phoneNumber, applicationVerifier));\r\n    }\r\n    async signInWithPopup(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        return convertCredential(this._delegate, exp.signInWithPopup(this._delegate, provider, CompatPopupRedirectResolver));\r\n    }\r\n    async signInWithRedirect(provider) {\r\n        _assert$1(_isPopupRedirectSupported(), this._delegate, \"operation-not-supported-in-this-environment\" /* exp.AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n        await _savePersistenceForRedirect(this._delegate);\r\n        return exp.signInWithRedirect(this._delegate, provider, CompatPopupRedirectResolver);\r\n    }\r\n    updateCurrentUser(user) {\r\n        // remove ts-ignore once overloads are defined for exp functions to accept compat objects\r\n        // @ts-ignore\r\n        return this._delegate.updateCurrentUser(user);\r\n    }\r\n    verifyPasswordResetCode(code) {\r\n        return exp.verifyPasswordResetCode(this._delegate, code);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n    _delete() {\r\n        return this._delegate._delete();\r\n    }\r\n    linkUnderlyingAuth() {\r\n        this._delegate.wrapped = () => this;\r\n    }\r\n}\r\nAuth.Persistence = Persistence;\r\nfunction wrapObservers(nextOrObserver, error, complete) {\r\n    let next = nextOrObserver;\r\n    if (typeof nextOrObserver !== 'function') {\r\n        ({ next, error, complete } = nextOrObserver);\r\n    }\r\n    // We know 'next' is now a function\r\n    const oldNext = next;\r\n    const newNext = (user) => oldNext(user && User.getOrCreate(user));\r\n    return {\r\n        next: newNext,\r\n        error: error,\r\n        complete\r\n    };\r\n}\r\nfunction buildPersistenceHierarchy(apiKey, appName) {\r\n    // Note this is slightly different behavior: in this case, the stored\r\n    // persistence is checked *first* rather than last. This is because we want\r\n    // to prefer stored persistence type in the hierarchy. This is an empty\r\n    // array if window is not available or there is no pending redirect\r\n    const persistences = _getPersistencesFromRedirect(apiKey, appName);\r\n    // If \"self\" is available, add indexedDB\r\n    if (typeof self !== 'undefined' &&\r\n        !persistences.includes(exp.indexedDBLocalPersistence)) {\r\n        persistences.push(exp.indexedDBLocalPersistence);\r\n    }\r\n    // If \"window\" is available, add HTML Storage persistences\r\n    if (typeof window !== 'undefined') {\r\n        for (const persistence of [\r\n            exp.browserLocalPersistence,\r\n            exp.browserSessionPersistence\r\n        ]) {\r\n            if (!persistences.includes(persistence)) {\r\n                persistences.push(persistence);\r\n            }\r\n        }\r\n    }\r\n    // Add in-memory as a final fallback\r\n    if (!persistences.includes(exp.inMemoryPersistence)) {\r\n        persistences.push(exp.inMemoryPersistence);\r\n    }\r\n    return persistences;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nclass PhoneAuthProvider {\r\n    constructor() {\r\n        this.providerId = 'phone';\r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        this._delegate = new exp.PhoneAuthProvider(unwrap(firebase.auth()));\r\n    }\r\n    static credential(verificationId, verificationCode) {\r\n        return exp.PhoneAuthProvider.credential(verificationId, verificationCode);\r\n    }\r\n    verifyPhoneNumber(phoneInfoOptions, applicationVerifier) {\r\n        return this._delegate.verifyPhoneNumber(\r\n        // The implementation matches but the types are subtly incompatible\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        phoneInfoOptions, applicationVerifier);\r\n    }\r\n    unwrap() {\r\n        return this._delegate;\r\n    }\r\n}\r\nPhoneAuthProvider.PHONE_SIGN_IN_METHOD = exp.PhoneAuthProvider.PHONE_SIGN_IN_METHOD;\r\nPhoneAuthProvider.PROVIDER_ID = exp.PhoneAuthProvider.PROVIDER_ID;\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst _assert = exp._assert;\r\nclass RecaptchaVerifier {\r\n    constructor(container, parameters, app = firebase.app()) {\r\n        var _a;\r\n        // API key is required for web client RPC calls.\r\n        _assert((_a = app.options) === null || _a === void 0 ? void 0 : _a.apiKey, \"invalid-api-key\" /* exp.AuthErrorCode.INVALID_API_KEY */, {\r\n            appName: app.name\r\n        });\r\n        this._delegate = new exp.RecaptchaVerifier(container, \r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        parameters, \r\n        // TODO: remove ts-ignore when moving types from auth-types to auth-compat\r\n        // @ts-ignore\r\n        app.auth());\r\n        this.type = this._delegate.type;\r\n    }\r\n    clear() {\r\n        this._delegate.clear();\r\n    }\r\n    render() {\r\n        return this._delegate.render();\r\n    }\r\n    verify() {\r\n        return this._delegate.verify();\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst AUTH_TYPE = 'auth-compat';\r\n// Create auth components to register with firebase.\r\n// Provides Auth public APIs.\r\nfunction registerAuthCompat(instance) {\r\n    instance.INTERNAL.registerComponent(new Component(AUTH_TYPE, container => {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        const app = container.getProvider('app-compat').getImmediate();\r\n        const authProvider = container.getProvider('auth');\r\n        return new Auth(app, authProvider);\r\n    }, \"PUBLIC\" /* ComponentType.PUBLIC */)\r\n        .setServiceProps({\r\n        ActionCodeInfo: {\r\n            Operation: {\r\n                EMAIL_SIGNIN: exp.ActionCodeOperation.EMAIL_SIGNIN,\r\n                PASSWORD_RESET: exp.ActionCodeOperation.PASSWORD_RESET,\r\n                RECOVER_EMAIL: exp.ActionCodeOperation.RECOVER_EMAIL,\r\n                REVERT_SECOND_FACTOR_ADDITION: exp.ActionCodeOperation.REVERT_SECOND_FACTOR_ADDITION,\r\n                VERIFY_AND_CHANGE_EMAIL: exp.ActionCodeOperation.VERIFY_AND_CHANGE_EMAIL,\r\n                VERIFY_EMAIL: exp.ActionCodeOperation.VERIFY_EMAIL\r\n            }\r\n        },\r\n        EmailAuthProvider: exp.EmailAuthProvider,\r\n        FacebookAuthProvider: exp.FacebookAuthProvider,\r\n        GithubAuthProvider: exp.GithubAuthProvider,\r\n        GoogleAuthProvider: exp.GoogleAuthProvider,\r\n        OAuthProvider: exp.OAuthProvider,\r\n        SAMLAuthProvider: exp.SAMLAuthProvider,\r\n        PhoneAuthProvider: PhoneAuthProvider,\r\n        PhoneMultiFactorGenerator: exp.PhoneMultiFactorGenerator,\r\n        RecaptchaVerifier: RecaptchaVerifier,\r\n        TwitterAuthProvider: exp.TwitterAuthProvider,\r\n        Auth,\r\n        AuthCredential: exp.AuthCredential,\r\n        Error: FirebaseError\r\n    })\r\n        .setInstantiationMode(\"LAZY\" /* InstantiationMode.LAZY */)\r\n        .setMultipleInstances(false));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterAuthCompat(firebase);\n"],"x_google_ignoreList":[0,1]}