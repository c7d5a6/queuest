{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../api/services/items.service\";\nlet AddItemComponent = /*#__PURE__*/(() => {\n  class AddItemComponent {\n    constructor(formBuilder, itemService) {\n      this.formBuilder = formBuilder;\n      this.itemService = itemService;\n      this.changes = new EventEmitter();\n      this.form = this.formBuilder.group({\n        name: [null, Validators.required]\n      });\n    }\n    addNewItem(event) {\n      this.updateFormValidity(this.form);\n      if (!this.form.valid) {\n        event.target.blur();\n        return;\n      }\n      const itemEntity = this.form.value;\n      this.itemService.itemsControllerAddItem({\n        body: itemEntity\n      }).subscribe(() => {\n        this.form.reset();\n        this.changes.emit();\n      });\n    }\n    updateFormValidity(form) {\n      Object.values(form.controls).forEach(control => {\n        this.updateFormControlValidity(control);\n      });\n    }\n    updateFormControlValidity(control) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    }\n  }\n  AddItemComponent.ɵfac = function AddItemComponent_Factory(t) {\n    return new (t || AddItemComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ItemsService));\n  };\n  AddItemComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddItemComponent,\n    selectors: [[\"app-add-item\"]],\n    outputs: {\n      changes: \"changes\"\n    },\n    decls: 4,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"formControlName\", \"name\", \"id\", \"name\", \"placeholder\", \"Item\"], [3, \"disabled\", \"click\"]],\n    template: function AddItemComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelement(1, \"input\", 1);\n        i0.ɵɵelementStart(2, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function AddItemComponent_Template_button_click_2_listener($event) {\n          return ctx.addNewItem($event);\n        });\n        i0.ɵɵtext(3, \"Add\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n  });\n  return AddItemComponent;\n})();\nexport { AddItemComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}